
clear all;
close all;

% Definitions of the objective function, its gradient and its Hessian matrix
syms x1 x2;

% δήλωση αντικειμενικής συνάρτησης
f= (x1-2*x2)^2+x1^4


% gradient/εύρεση ανάδελτα, αρχικά το αρχικοποιούμε
GradF=sym(zeros(2,1));

%μερική παράγωγος
GradF=[diff(f, x1); diff(f, x2)]

% Αρχικοποιούμε τον εσσιανό και υπολογίζουμε τις δεύτερες μερικές
% παραγώγους
HF=sym(zeros(2,2));
HF=[diff(f, x1, 2), diff(diff(f,x2), x1)
    diff(diff(f,x1), x2), diff(f, x2, 2)]                                                                                

%λύνουμε το σύστημα ανάδελτα της f στα σημεία x που ψάχνουμε = με το
%μηδενικό διάνυσμα
X = solve([diff(f, x1) == 0, diff(f, x2) == 0], [x1, x2])

x1ab=X.x1
x1a=x1ab(1)
%x1b=x1ab(2)

x2ab=X.x2
x2a=x2ab(1)
%x2b=x2ab(2)

%ενώνω τις συνειστώσες σε ένα διάνυσμα
x_star_a=[x1a; x2a]

%x_star_b=[x1b; x2b]

%έχουμε βρει τις λύσεις του συστήματος, πρέπει να κάνουμε assignment
%numerical values. Στις θέσεις των συμβόλων, βάζουμε τα νούμερα που βρήκαμε
%πιο πάνω
HF_star_a=subs(HF,[x1,x2],[x1a,x2a])

%HF_star_b=subs(HF,[x1,x2],[x1b,x2b])

%εδώ πέρνουμε τα Δέλτα, Δ2 είναι η ορίζουσα του εσσιανού πίνακα
D1_star_a=HF_star_a(1,1)
D2_star_a=det(HF_star_a)

%D1_star_b=HF_star_b(1,1)
%D2_star_b=det(HF_star_b)

%%%%% Με απλές if που συντέθηκαν με βάση το θεώρημα 2.4 ελέγχουμε αν τα
%%%%% κρίσιμα σημεία ειναι τοπικοί βελτιστοποιητές,αν όχι ελέγχουμε χειροκίνητα, αν είναι το τυπώνουμε
if (D1_star_a > 0) && (D2_star_a > 0)
    disp('Το x_star_a είναι τοπικός ελαχιστοποιητής')
elseif (D1_star_a < 0) && (D2_star_a > 0)
    disp('Το x_star_a είναι τοπικός μεγιστοποιητης')
end  

%ιδιοτιμές
eig_star_a=eig(HF_star_a)


%%%%% Με απλές if που συντέθηκαν με βάση το θεώρημα 2.5 ελέγχουμε αν τα
%%%%% κρίσιμα σημεία ειναι τοπικοί βελτιστοποιητές,αν όχι ελέγχουμε χειροκίνητα, αν είναι το τυπώνουμε
    %έλεγχος για το πρώτο κρίσιμο σημείο
if (eig_star_a(1) > 0) && (eig_star_a(2) > 0)
    disp('Το x_star_a είναι τοπικός ελαχιστοποιητής με βάση τις ιδιοτιμές')
elseif (eig_star_a(1) < 0) && (eig_star_a(2) < 0)
    disp('Το x_star_a είναι τοπικός μεγιστοποιητης με βάση τις ιδιοτιμές')
end
